from main import app
import time


class TestApp():
    @classmethod
    def setup_class(self):
        # setup test client so we can mock interactions with Flask
        self.app = app.test_client()

    def test_status_code(self):
        '''
        Check response is proper HTTP status code
        '''
        response = self.app.get('/time')
        assert(response.status_code == 200)

    def test_time_range(self):
        '''
        Test time generated by service is dynamic and within bounds
        '''
        # get time before running test
        before = int(time.time())
        # Wait 2 seconds
        time.sleep(2)
        response = self.app.get('/time')
        response_time = response.json["timestamp"]
        # Wait 2 seconds
        time.sleep(2)
        after = int(time.time())
        # Check time is between before and after request time marks
        assert(before <= response_time <= after)

    def test_body_message(self):
        '''
        Test "message" field of response is properly formatted.
        '''
        response = self.app.get('/time')
        correct_message = "Automation for the People"
        response_message = response.json["message"]
        assert(response_message == correct_message)

    def test_body_keys(self):
        '''
        Test there are no extra keys in the reponse outside of specifications
        '''
        response = self.app.get('/time')
        acceptable_keys = ["timestamp", "message"]
        for key in response.json:
            assert(key in acceptable_keys)

    def test_info(self):
        '''
        Test to check hostname is returned as data
        '''
        response = self.app.get('/')
        assert(response.data is not None)
